#!/usr/bin/env python3
import getpass
import subprocess
import sys

from ocflib.account.manage import modify_ldap_attributes
from ocflib.misc.validators import VALID_LOGIN_SHELLS


def main(args):
    if len(args) < 2:
        print('Usage: chsh [shell]')
        return 1

    new_shell = args[1]

    print('Changing shell to {}...'.format(new_shell))

    # Check if the user has a valid kerberos ticket
    has_kerberos = subprocess.run(('/usr/bin/klist', '-t')).returncode

    if has_kerberos != 0:
        # The user doesn't have a valid kerberos ticket already, so obtain a new
        # ticket (this asks for a password if they don't already have a ticket, and
        # then uses their password to obtain a new ticket)
        subprocess.run('/usr/bin/kinit', check=True)

    # modify_ldap_attributes already does loginShell validation for us to make sure
    # it's a valid shell, so we don't have to do any extra here
    try:
        modify_ldap_attributes(getpass.getuser(), {'loginShell': new_shell})
    except ValueError as e:
        print(e, 'valid shells are: {}'.format(list(VALID_LOGIN_SHELLS)))
        return 1

    print(
        'Shell successfully changed, typically it takes a while for the '
        'changes to propagate to all our machines'
    )
    return 0


if __name__ == '__main__':
    exit(main(sys.argv))
