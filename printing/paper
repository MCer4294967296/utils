#!/usr/bin/perl

# pykota not installed on tsunami, display a sane message in the interim
#print "Printing quota records are temporarily unavailable";
#exit;

use Getopt::Long;
use POSIX qw (ceil);

# paper:
# wrapper for pykota commands

# Author: Stephen Le <sle@ocf.berkeley.edu>
# Original Version: 8-Apr-2009
# Modified by Mike Gasidlo <mgasidlo@ocf.berkeley.edu> 25-Sep-2009
# Modified by Jordan Salter <jordan@ocf.berkeley.edu> 9-Dec-2009
#             (minor regexp fix -- died when user had negative paper quota)
# Modified Sanjayk to be a little bit more user friendly
# Modified by Jordan Salter <jordan@ocf.berkeley.edu> 25-Jan-2010
#             (tweaked sanjayk's message -- mailing staff.berkeley.edu is
#              not going to work very well :)
# Modified by waf for error message to be more user friendly 16-Sept-2010
# Modified by benortiz to add incorrect message even when balance 
#             exists 28-Feb-2011
# Modified by amloessb to use the paper [-v] [username] syntax 27-Apr-2011

if ( $#ARGV + 1 > 2 ) {
    print "Usage: paper [-v] [username]\n";
    print "       Running paper with no username present will get information on the\n";
    print "       current user.\n";
    print "       Must be run on a machine with the pkusers command.\n\n";
    exit;
}

my $PKUSERS = '/opt/ocf/packages/pykota/pkusers --config /etc/pykota/pykota.semester/';
my $PKUSERSD = '/opt/ocf/packages/pykota/pkusers';

my $user;
my $verbose = 0;
my $noarg;

if ( $ARGV[0] eq "-v" ) {
	$verbose = 1;
	$user = $ARGV[1];
} else {
	$user = $ARGV[0];
}

#GetOptions( 'user=s' => \$user );
if ( !$user ) {
#    $user  = getlogin();
    $user  = getpwuid($<); 
    $noarg = 1;
}

if($user !~ /^[a-z]+$/) {
    print 'Invalid user:'. $user ."\n";
    exit(0);
}

my $output = `$PKUSERS --list $user  2> /dev/null`;
my $outputd = `$PKUSERSD --list $user  2> /dev/null`;

if ( $verbose == 1 ) {
	print `$PKUSERS -L $user`;
	exit;
}

if(length($output)==0)
{
	print "$user does not appear to be in our print accounting system -- this is\n";
	print "probably because $user has not printed anything this semester.\n";
	exit;
}

my ( $balance, $total ) =
  $output =~ m/Account balance : (-?\d+\.\d+)\s*Total paid so far : (-?\d+\.\d+)/s;
$balance = ceil($balance);
my $balanced = 30;
my $wday = (localtime)[6];
if ($wday >= 1 && $wday <= 5)
{
   $balanced = 15;
}

if(length($outputd)!=0)
{
  ( $balanced, $totald ) = $outputd =~ m/Account balance : (-?\d+\.\d+)\s*Total paid so far : (-?\d+\.\d+)/s;
$balanced = ceil($balanced);

}

print "Printing quota remaining\n";
print "Semester: $balance pages\n";
print "Today: $balanced pages\n";
