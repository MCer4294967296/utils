#!/bin/bash

# Creates symlink to user's webroot. If the symlink exists and files
# are present in webroot, they are backed up in the user's home directory.
# A user's database is created or, if it already exists, the password 
# is reset. WordPress is installed and the wp-config file is filled
# out with the requisite information. Further configuration can be 
# done by the user from a browser.  
#

set -euo pipefail
shopt -s dotglob

echo -e "\033[31mWARNING: This script should generally be run on a fresh account!\033[00m"
echo -e "A user with an existing website or database will have their files 
backed up, but their database password will change and the WordPress 
install may clutter or try to migrate tables.\n"

read -rp "Are you sure you want to continue? [Y/n] " idunno
idunno=${idunno,,}
if ! [[ "$idunno" =~ ^(yes|y|^$) ]]; then
    echo "Ok, bye!"
    exit 0
fi

webroot=$HOME/public_html
user=$(whoami)

# Create symlink to webroot
makehttp
cd "$webroot"

# Check if user has files and let user decide what they want to do. 
if [[ -n "$(ls -A)" ]]; then
    echo
    echo -e "There are currently files in webroot!\n"
    read -rp "Do you want to back these files up? [Y/n/x] " whoknows

    whoknows=${whoknows,,}
    if [[ "$whoknows" =~ ^(yes|y|^$) ]]; then
        ts=$(date +"%Y-%m-%d_%H:%M:%S")
        backup="$HOME/webroot-$ts"
        mkdir -p "$backup"
        echo "Moving current files to $backup ..." 
        mv ./* "$backup"
    elif [[ "$whoknows" =~ ^(no|n) ]]; then
        echo "Ok, say goodbye to your website."
        rm -rf ./*
    else
        echo "Ok, bye!"
        exit 0
    fi
fi

# Get SQL password
echo "Resetting database password..."
sqlpass=$(echo "yes" | makemysql | tail -n 1 | grep -Po '(?<=: )([0-9a-zA-Z]){24,}$')
if [[ -z "$sqlpass" ]]; then
    echo -e "\033[31mError:\033[00m Could not retrieve database password. Run makemysql to see the issue."
    exit 1
fi
echo "SQL set up and the password can be found in wp-config.php ..."

# Install WordPress and create config file
wp core download
wp config create --dbname="$user" --dbuser="$user" --dbpass="$sqlpass" --dbhost=mysql --dbcharset=utf8mb4 
echo "WordPress install successful. Go to https://www.ocf.berkeley.edu/~$user to finish the setup process."
