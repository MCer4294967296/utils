#!/usr/bin/env python3
"""chpass allows root staffers to change OCF users' passwords."""

import getpass
import os
import sys

from ocflib.account.manage import change_password_with_staffer
from ocflib.account.search import user_exists
from ocflib.account.validators import validate_password
from ocflib.misc.shell import green
from ocflib.misc.shell import prompt_for_new_password
from ocflib.misc.shell import red


def change_password(user, password):
    root_principal = "{}/root".format(getpass.getuser())
    print("Admin is {}.".format(root_principal))

    # keep trying to change the password until we succeed :-)
    while True:
        try:
            root_password = getpass.getpass(
                "Enter admin password: ".format(root_principal))
            print(green('[OK]') + ' Changing password...')
            change_password_with_staffer(
                user,
                password,
                root_principal,
                root_password)
        except ValueError as ex:
            # this usually means the staffer entered their password wrong,
            # so we let them try again, if they want
            print(red('[ERROR]') + ' chpass failure: ' + str(ex))
        else:
            break

    print(green('[OK]') + ' Password changed.')


def main():
    if os.geteuid() == 0:
        print("chpass should not be run as root", file=sys.stderr)
        sys.exit(1)

    if len(sys.argv) != 2:
        print("usage: {} username".format(sys.argv[0]), file=sys.stderr)
        sys.exit(1)

    user = sys.argv[1]

    if not user_exists(user):
        print("user '{}' does not exist".format(user), file=sys.stderr)
        sys.exit(1)

    new_password = prompt_for_new_password(
        validator=lambda password: validate_password(user, password),
    )
    change_password(user, new_password)


if __name__ == '__main__':
	main()
