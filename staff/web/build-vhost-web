#!/usr/bin/env python3
# This script is used to generate the Apache virtual host configuration.
import os.path
import ocflib.account.utils as utils

TEMPLATE_VHOST = """<VirtualHost *:80>
    ServerName {domain}
    ServerAdmin {user}@ocf.berkeley.edu
    DocumentRoot {docroot}
    UserDir disable
{config}
</VirtualHost>"""

TEMPLATE_VHOST_MAIN = """
    SuexecUserGroup {user} ocf
    suPHP_Engine off
    AddHandler php5-fcgi .php
    Action php5-fcgi /php5-fcgi
    Alias /php5-fcgi /opt/suexec/{user}/php5-fcgi-wrapper

    <Directory {docroot}>
        AllowOverride All
        Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec ExecCGI

        AddHandler cgi-script cgi pl cgi-debug py

        <Limit GET POST OPTIONS PROPFIND>
            Order allow,deny
            Allow from all
        </Limit>
        <LimitExcept GET POST OPTIONS PROPFIND>
            Order deny,allow
            Deny from all
        </LimitExcept>
    </Directory>

    <Directory {docroot}cgi-bin/>
        Options -All
    </Directory>"""


def get_config(domain, config):
    """Returns string representing Apache <VirtualHost> block(s).

    A single vhost can expand to multiple actual blocks if the vhost has
    aliases which redirect to the primary host.
    """
    docroot = os.path.join(utils.web_dir(config['username']), config['docroot'][1:])

    def wrap_vhost(domain, text):
        """Wraps the given config text inside a <VirtualHost> block, with
        appropriate settings for server name, admin, etc."""

        return TEMPLATE_VHOST.format(
            domain=domain,
            user=config['username'],
            docroot=docroot,
            config=text)


    def gen_redirect_config(host, redirect):
        return wrap_vhost(host, "Redirect " + redirect)


    def gen_main_config(host):
        return wrap_vhost(
            host,
            TEMPLATE_VHOST_MAIN.format(user=config['username'],
                                       docroot=docroot))


    def get_fragments():
        yield "# {domain} ({user})".format(domain=domain, user=config['username'])

        if not config['redirect']:
            yield gen_main_config(domain)
        else:
            yield gen_redirect_config(domain, config['redirect'])

        for alias in config['aliases']:
            url = "http://{domain}/".format(domain=domain)
            yield gen_redirect_config(alias, 'permanent / ' + url)

    return "\n".join(get_fragments())


if __name__ == '__main__':
    vhosts = utils.get_vhosts().items()
    config = "\n\n".join(get_config(domain, conf) for domain, conf in vhosts)

    with open('/etc/apache2/sites-enabled/virtual.conf', 'w') as f:
        print(config, file=f)
