#!/usr/bin/env python3
# Wake OCF lab machines via wake-on-LAN
import argparse
import os.path
import subprocess
import sys

import ldap3

LDAP_SERVER = 'ldap.ocf.berkeley.edu'
LDAP_BASE = 'ou=Hosts,dc=OCF,dc=Berkeley,dc=EDU'
ALL_HOSTS_FILTER = '(type=desktop)'


def get_host_filter(hosts):
    if not all(host.isalnum() for host in hosts):
        print('Please use valid hostnames', file=sys.stderr)
        sys.exit(1)

    return '(&' + ALL_HOSTS_FILTER + '(|(cn=' + ')(cn='.join(hosts) + ')))'


def wake(filter):
    with ldap3.Connection(ldap3.Server(LDAP_SERVER, use_ssl=True)) as c:
        c.search(LDAP_BASE, filter, attributes=['macAddress'])

        addrs = [host['attributes']['macAddress'][0] for host in c.response]
        subprocess.check_call(['wakeonlan'] + addrs)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Wake up lab machines.')
    parser.add_argument('-f', '--force', action='store_true',
                        help='Force wakeup, even if /opt/ocf-nowakeup exists')
    parser.add_argument('host', nargs='*',
                        help='Host to wake. If not specified, wakes all desktops. Implies --force.')
    args = parser.parse_args()
    force = args.force or args.host

    if not force and os.path.exists('/opt/ocf-nowakeup'):
        print('Not waking anything; use --force or remove /opt/ocf-nowakeup')
        sys.exit(0)

    wake(get_host_filter(args.host) if args.host else ALL_HOSTS_FILTER)
