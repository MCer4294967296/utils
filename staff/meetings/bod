#!/usr/bin/env python3
import argparse
import sys

import bod
import meetings


def get_last_meeting():
    """Returns a (semester, filename) pair for the most recent meeting."""
    if not hasattr(get_last_meeting, 'cached_val'):
        meeting_lst = meetings.get_minutes(bod.get_bod_minutes_path())
        get_last_meeting.cached_val = (meetings.get_semester(), meeting_lst[-1])
    return get_last_meeting.cached_val


def quorum(args):
    print(bod.quorum_next(*get_last_meeting()))


def ls(args):
    for director in sorted(bod.ls(*get_last_meeting())):
        print(director)


def danger(args):
    on_bod = bod.ls(*get_last_meeting())
    at_last_meeting = set(bod.get_attending_directors(*get_last_meeting()))

    for director in sorted(on_bod - at_last_meeting):
        print(director)


if __name__ == '__main__':
    commands = {
        'quorum': quorum,
        'ls': ls,
        # lists people in "danger" of being kicked off
        # i.e. people who missed last meeting on bod
        'danger': danger,
    }

    parser = argparse.ArgumentParser(description='View bod composition and information')
    subparser = parser.add_subparsers(dest='command', help='command to run')
    subparser_danger = subparser.add_parser('danger', help='users in danger of being kicked off bod')
    subparser_ls = subparser.add_parser('ls', help='list users and their bod eligibility state')
    subparser_quorum = subparser.add_parser('quorum', help='current bod quorum')

    if len(sys.argv) == 1:
        parser.print_help()
    else:
        args = parser.parse_args()
        commands[args.command](args)
